FORMAT: 1A
HOST: http://member.impacthub.ch/api

# Hub Roombooking Backend API
... More information here

## Allowed HTTPs requests:

- `POST` - Creates or updates a resource
- `PUT` - Updates a resource
- `GET` - Retrieves a resource or list of resources
- `DELETE` - Delete a resource
## Typical Server Responses

- 200 `OK` - The request was successful (some API calls may return 201 instead).
- 201 `Created` - The request was successful and a resource was created.
- 204 `No Content` - The request was successful but there is no representation to return (that is, the response is empty).
- 400 `Bad Request` - The request could not be understood or was missing required parameters.
- 401 `Unauthorized` - Authentication failed or user does not have permissions for the requested operation.
- 403 `Forbidden` - Access denied.
- 404 `Not Found` - Resource was not found.
- 503 `Service Unavailable` - The service is temporary unavailable (e.g. scheduled Platform Maintenance). Try again later.

# Bookings
Bookings can be created and changed without authentication. They are secured by UUIDs, so people can not guess booking IDs to
maliciously change them. Also, the API never returns a booking API, to keep them secret.

## Booking [/bookings/{id}]
A single Booking object.

The Gist resource has the following attributes: 

- category
- name
- email
- memberId
- room
- day
- startTime
- duration
- invoiceName
- invoiceEmail
- phone
- additionalInvoiceData
- street
- zip
- city
- country
- note
- cancelledAt (read-only)
- userConfirmedAt (read-only)
- hubConfirmedAt (read-only)
- updatedAt (read-only)
- createdAt (read-only)

The *createdAt* and *updatedAt* attributes are assigned by the Backend at the moment of creation. 
The *cancelledAt* and *userConfirmedAt* are set when confirming/cancelling a booking.


+ Parameters
    + id (string) ... ID of the Booking, must be a [UUID](http://en.wikipedia.org/wiki/Universally_unique_identifier)

+ Model (application/json)

    JSON representation of a Booking Resource
    
    + Headers
    
            Location: http://api.acme.com/message  
    
    + Body
        
            {
                "id":"301024",
                "category":"member",
                "name":"Joe",
                "email":"joe@example.net",
                "memberId":"123456","room":
                "smallmeetingroom",
                "startTime":9,
                "endTime":13.5,
                "duration":2,
                "day":"2014-09-07",
                "invoiceName":"Bill Boss",
                "invoiceEmail":"bill@example.com",
                "additionalInvoiceData":"Bookkeeping Department",
                "street":"Street name 10235",
                "zip":"12345",
                "city":"City",
                "country":"Switzerland",
                "note":"Note here",
                "cancelledAt":null,
                "userConfirmedAt":null,
                "hubConfirmedAt":null,
                "updatedAt":"2014-09-04",
                "createdAt":"2014-09-04"
            }

### Retrieve a Single Booking [GET]
+ Response 200
    
    [Booking][]

### Edit a Booking [PATCH]
To update a Booking send a JSON with updated value for one or more of the attributes. All attributes values (states) from the previous version are carried over by default if not included in the hash.

+ Request (application/json)

        {
            "note": "Here is some extra info"
        }

+ Response 200
    
    [Booking][]


## Booking Confirmation [/bookings/{id}/confirm]
Confirm a Booking

Only new bookings can be confirmed. The Backend should respond with `403 forbidden` otherwise.
If successfully confirmed, the booking sets the `userConfirmedAt` timestamp.

### Confirm a Booking [POST]

+ Response 201

    [Booking][]

## Booking Cancellation [/bookings/{id}/cancel]
Cancel a Booking

Only new bookings can be cancelled. The Backend should respond with `403 forbidden` otherwise
If successfully cancelled, the booking sets the `cancelledAt` timestamp.

### Cancel a Booking [POST]

+ Response 201

    [Booking][]

## Booking Confirmation notification [/bookings/{id}/confirmation_notification]
When creating a booking, an email with a confirmation URL gets sent to the user.

If for whatever reason the mail did not arrive
Only new bookings can be cancelled. The Backend should respond with `403 forbidden` otherwise
If successfully cancelled, the booking sets the `cancelledAt` timestamp.

### Request confirmation mail [POST]

+ Response 201

    [Booking][]

## Booking Collection [/bookings]
Collection of all Bookings

### Create a Booking [POST]
To create a new Booking simply provide a JSON hash of the the booking attributes.

+ Request (application/json)

        {
          "category": "member",
          "name": "Joe",
          "email": "joe@example.net",
          "memberId": "123456",
          "room": "smallmeetingroom",
          "startTime": 9,
          "duration": 2,
          "day": "2014-09-07",
          "invoiceName": "Bill Boss",
          "invoiceEmail": "bill@example.com",
          "additionalInvoiceData": "Bookkeeping Department",
          "street": "Street name 10235",
          "zip": "12345",
          "city": "City",
          "country": "Switzerland",
          "note": "Note here"
        }

+ Response 201

    [Booking][]
    
    
## Event Collection [/events{?since,until}]
Collection of all events.

+ Model (application/json)

    + Body

            [
              {
                "title": "largemeetingroom",
                "start": "2014-09-05T07:00:00.000Z",
                "end": "2014-09-05T15:00:00.000Z",
                "location": "largemeetingroom"
              },
              {
                "title": "garage",
                "start": "2014-09-05T15:00:00.000Z",
                "end": "2014-09-05T20:30:00.000Z",
                "location": "garage"
              }
            ]

### List all events [GET]
Returns an array of all events

+ Parameters
    + since (optional, string) ... Day as `YYYY-MM-DD`. Only events starting this day will be returned. Defaults to today
    + until (optional, string) ... Day as `YYYY-MM-DD`. Only events until this day will be returned.
    
+ Response 200

    [Event Collection][]